[
  // to see output:
  // sublime.log_commands(True)

  // open this keybindings file
  {
    "keys": ["super+ctrl+,"],
    "command": "open_file",
    "args": {"file": "${packages}/User/Default ($platform).sublime-keymap"}
  },

  // go to line
  {
    "keys": ["super+l"],
    "command": "show_overlay",
    "args": {"overlay": "goto", "text": ":"}
  },

  // copy file name
  {
    "keys": ["super+shift+c"],
    "command": "copy_path_to_clipboard"
  },

  // clone pane
  {
    "keys": ["super+alt+2"],
    "command": "clone_pane"
  },

  // ctags
  {
    "keys": ["ctrl+]"],
    "command": "navigate_to_definition"
  },

  {
    "keys": ["super+alt+p"],
    "command": "rebuild_tags"
  },

  // Duplicate selection
  { "keys": ["ctrl+shift+d"], "command": "duplicate_line" },

  // show in project drawer
  { "keys": ["ctrl+super+r"], "command": "reveal_in_side_bar"},

  // close all other tabs
  {
    "keys": ["super+alt+w"],
    "command": "close_other_tabs"
  },

  // focus on side bar
  {
    "keys": ["ctrl+shift+tab"],
    "command": "focus_side_bar"
  },

  // focus back in buffer
  {
    "keys": ["ctrl+tab"],
    "command": "focus_group",
    "args": {"group": 0}
  },

  // go to symbol
  {
    "keys": ["super+ctrl+t"],
    "command": "show_overlay",
    "args": {"overlay": "goto", "text": "@"}
  },

  // find and replace by default
  {
    "keys": ["super+f"],
    "command": "show_panel",
    "args": {"panel": "replace"}
  },

  // use textmate replace next
  {
    "keys": ["super+alt+f"],
    "command": "replace_next"
  },

  // use textmate? replace all
  {
    "keys": ["super+alt+ctrl+f"],
    "command": "replace_all"
  },

  // reindent
  {
    "keys": ["super+ctrl+["],
    "command": "reindent",
    "args": {"single_line": false}
  },

  // check ruby syntax
  {
    "keys": ["alt+shift+v"],
    "command": "check_ruby_syntax"
  },

  // paste and indent by default
  {
    "keys": ["super+v"],
    "command": "paste_and_indent"
  },

  {
    "keys": ["super+alt+v"],
    "command": "paste"
  },

  // super+k, super+d = deselect this match

  /*
    RUBY
  */
  {
    "keys": ["ctrl+shift+down"],   // super+ctrl+. will show spec and implementation in split view
    "command": "open_rspec_file",
    "context": [ {"key": "selector", "operator": "equal", "operand": "source.ruby"} ]
  },
  {
    "keys": ["super+r"],
    "command": "run_tests",
    "args": {"scope": "file"},
    "context": [ {"key": "selector", "operator": "equal", "operand": "source.ruby"} ]
  },
  {
    "keys": ["super+shift+r"],
    "command": "run_tests",
    "args": {"scope": "line"},
    "context": [ {"key": "selector", "operator": "equal", "operand": "source.ruby"} ]
  },
  {
    "keys": ["super+alt+ctrl+r"],
    "command": "run_tests",
    "args": {"scope": "last"},
    "context": [ {"key": "selector", "operator": "equal", "operand": "source.ruby"} ]
  },

  /*
    GOLANG
  */
  // select golang twin
  {
    "keys": ["ctrl+shift+down"],
    "command": "open_javascript_twin",
    "context": [ {"key": "selector", "operator": "equal", "operand": "source.js"} ]
  },

  // run golang main package
  {
    "keys": ["super+r"],
    "command": "gs9o_open",
    "args": {"run": ["replay"] },
    "context": [ {"key": "selector", "operator": "equal", "operand": "source.go"} ]
  },

  /*
    COFFEESCRIPT
  */
  // compile and display coffeescript
  {
    "keys": ["super+b"],
    "command": "compile_and_display_js",
    "context": [ {"key": "selector", "operator": "equal", "operand": "source.coffee"} ]
  },
  // select coffeescript twin
  {
    "keys": ["ctrl+shift+down"],
    "command": "open_coffee_twin",
    "context": [ {"key": "selector", "operator": "equal", "operand": "source.coffee"} ]
  },

  /*
    JAVASCRIPT
  */
  // select javascript twin
  {
    "keys": ["ctrl+shift+down"],
    "command": "open_javascript_twin",
    "context": [ {"key": "selector", "operator": "equal", "operand": "source.js"} ]
  }

  // TODO:

  // keyboard shortcut to open up whole user directory

  // rectangular select with option
]
